// stddef.h (needs to be at the top-) {{{
typedef long int ptrdiff_t;
typedef long unsigned int size_t;
// }}}

/*/ complex.h (xxx: not yet if ever) {{{
extern double complex cacos(double complex z);
extern double complex casin(double complex z);
extern double complex catan(double complex z);
extern double complex ccos(double complex z);
extern double complex csin(double complex z);
extern double complex ctan(double complex z);
extern double complex cacosh(double complex z);
extern double complex casinh(double complex z);
extern double complex catanh(double complex z);
extern double complex ccosh(double complex z);
extern double complex csinh(double complex z);
extern double complex ctanh(double complex z);
extern double complex cexp(double complex z);
extern double complex clog(double complex z);
extern double complex cpow(double complex x, double complex y);
extern double complex csqrt(double complex z);
extern double cabs(double complex z);
extern double carg(double complex z);
extern double complex conj(double complex z);
extern double complex cproj(double complex z);
extern double cimag(double complex z);
extern double creal(double complex z);
extern float complex cacosf(float complex z);
extern float complex casinf(float complex z);
extern float complex catanf(float complex z);
extern float complex ccosf(float complex z);
extern float complex csinf(float complex z);
extern float complex ctanf(float complex z);
extern float complex cacoshf(float complex z);
extern float complex casinhf(float complex z);
extern float complex catanhf(float complex z);
extern float complex ccoshf(float complex z);
extern float complex csinhf(float complex z);
extern float complex ctanhf(float complex z);
extern float complex cexpf(float complex z);
extern float complex clogf(float complex z);
extern float complex cpowf(float complex x, float complex y);
extern float complex csqrtf(float complex z);
extern float cabsf(float complex z);
extern float cargf(float complex z);
extern float complex conjf(float complex z);
extern float complex cprojf(float complex z);
extern float cimagf(float complex z);
extern float crealf(float complex z);
extern long double complex cacosl(long double complex z);
extern long double complex casinl(long double complex z);
extern long double complex catanl(long double complex z);
extern long double complex ccosl(long double complex z);
extern long double complex csinl(long double complex z);
extern long double complex ctanl(long double complex z);
extern long double complex cacoshl(long double complex z);
extern long double complex casinhl(long double complex z);
extern long double complex catanhl(long double complex z);
extern long double complex ccoshl(long double complex z);
extern long double complex csinhl(long double complex z);
extern long double complex ctanhl(long double complex z);
extern long double complex cexpl(long double complex z);
extern long double complex clogl(long double complex z);
extern long double complex cpowl(long double complex x, long double complex y);
extern long double complex csqrtl(long double complex z);
extern long double cabsl(long double complex z);
extern long double cargl(long double complex z);
extern long double complex conjl(long double complex z);
extern long double complex cprojl(long double complex z);
extern long double cimagl(long double complex z);
extern long double creall(long double complex z);
// }}} */

// ctype.h {{{
extern int isalnum(int);
extern int isalpha(int);
extern int iscntrl(int);
extern int isdigit(int);
extern int islower(int);
extern int isgraph(int);
extern int isprint(int);
extern int ispunct(int);
extern int isspace(int);
extern int isupper(int);
extern int isxdigit(int);
extern int tolower(int c);
extern int toupper(int c);
extern int isblank(int);
extern int isascii(int c);
extern int toascii(int c);
typedef void* locale_t;
extern int isalnum_l(int, locale_t);
extern int isalpha_l(int, locale_t);
extern int iscntrl_l(int, locale_t);
extern int isdigit_l(int, locale_t);
extern int islower_l(int, locale_t);
extern int isgraph_l(int, locale_t);
extern int isprint_l(int, locale_t);
extern int ispunct_l(int, locale_t);
extern int isspace_l(int, locale_t);
extern int isupper_l(int, locale_t);
extern int isxdigit_l(int, locale_t);
extern int isblank_l(int, locale_t);
extern int tolower_l(int c, locale_t l);
extern int toupper_l(int c, locale_t l);
// }}}

// errno.h {{{
// todo: handle, there might not be any easy way because of the definition of
// `errno`, but it could be interesting to have it and the various E<..> on the
// platform
// }}}

// math.h {{{
extern double acos(double x);
extern double asin(double x);
extern double atan(double x);
extern double atan2(double y, double x);
extern double cos(double x);
extern double sin(double x);
extern double tan(double x);
extern double cosh(double x);
extern double sinh(double x);
extern double tanh(double x);
extern double acosh(double x);
extern double asinh(double x);
extern double atanh(double x);
extern double exp(double x);
extern double frexp(double x, int *exponent);
extern double ldexp(double x, int exponent);
extern double log(double x);
extern double log10(double x);
extern double modf(double x, double *iptr);
extern double expm1(double x);
extern double log1p(double x);
extern double logb(double x);
extern double exp2(double x);
extern double log2(double x);
extern double pow(double x, double y);
extern double sqrt(double x);
extern double hypot(double x, double y);
extern double cbrt(double x);
extern double ceil(double x);
extern double fabs(double x);
extern double floor(double x);
extern double fmod(double x, double y);
extern int isinf(double value);
extern int finite(double value);
extern double drem(double x, double y);
extern double significand(double x);
extern double copysign(double x, double y);
extern double nan(const char *tagb);
extern int isnan(double value);
extern double j0(double);
extern double j1(double);
extern double jn(int, double);
extern double y0(double);
extern double y1(double);
extern double yn(int, double);
extern double erf(double);
extern double erfc(double);
extern double lgamma(double);
extern double tgamma(double);
extern double gamma(double);
extern double lgamma_r(double, int *signgamp);
extern double rint(double x);
extern double nextafter(double x, double y);
extern double nexttoward(double x, long double y);
extern double remainder(double x, double y);
extern double scalbn(double x, int n);
extern int ilogb(double x);
extern double scalbln(double x, long int n);
extern double nearbyint(double x);
extern double round(double x);
extern double trunc(double x);
extern double remquo(double x, double y, int *quo);
extern long int lrint(double x);
extern long long int llrint(double x);
extern long int lround(double x);
extern long long int llround(double x);
extern double fdim(double x, double y);
extern double fmax(double x, double y);
extern double fmin(double x, double y);
extern double fma(double x, double y, double z);
extern double scalb(double x, double n);
extern float acosf(float x);
extern float asinf(float x);
extern float atanf(float x);
extern float atan2f(float y, float x);
extern float cosf(float x);
extern float sinf(float x);
extern float tanf(float x);
extern float coshf(float x);
extern float sinhf(float x);
extern float tanhf(float x);
extern float acoshf(float x);
extern float asinhf(float x);
extern float atanhf(float x);
extern float expf(float x);
extern float frexpf(float x, int *exponent);
extern float ldexpf(float x, int exponent);
extern float logf(float x);
extern float log10f(float x);
extern float modff(float x, float *iptr);
extern float expm1f(float x);
extern float log1pf(float x);
extern float logbf(float x);
extern float exp2f(float x);
extern float log2f(float x);
extern float powf(float x, float y);
extern float sqrtf(float x);
extern float hypotf(float x, float y);
extern float cbrtf(float x);
extern float ceilf(float x);
extern float fabsf(float x);
extern float floorf(float x);
extern float fmodf(float x, float y);
extern int isinff(float value);
extern int finitef(float value);
extern float dremf(float x, float y);
extern float significandf(float x);
extern float copysignf(float x, float y);
extern float nanf(const char *tagb);
extern int isnanf(float value);
extern float j0f(float);
extern float j1f(float);
extern float jnf(int, float);
extern float y0f(float);
extern float y1f(float);
extern float ynf(int, float);
extern float erff(float);
extern float erfcf(float);
extern float lgammaf(float);
extern float tgammaf(float);
extern float gammaf(float);
extern float lgammaf_r(float, int *signgamp);
extern float rintf(float x);
extern float nextafterf(float x, float y);
extern float nexttowardf(float x, long double y);
extern float remainderf(float x, float y);
extern float scalbnf(float x, int n);
extern int ilogbf(float x);
extern float scalblnf(float x, long int n);
extern float nearbyintf(float x);
extern float roundf(float x);
extern float truncf(float x);
extern float remquof(float x, float y, int *quo);
extern long int lrintf(float x);
extern long long int llrintf(float x);
extern long int lroundf(float x);
extern long long int llroundf(float x);
extern float fdimf(float x, float y);
extern float fmaxf(float x, float y);
extern float fminf(float x, float y);
extern float fmaf(float x, float y, float z);
extern float scalbf(float x, float n);
extern long double acosl(long double x);
extern long double asinl(long double x);
extern long double atanl(long double x);
extern long double atan2l(long double y, long double x);
extern long double cosl(long double x);
extern long double sinl(long double x);
extern long double tanl(long double x);
extern long double coshl(long double x);
extern long double sinhl(long double x);
extern long double tanhl(long double x);
extern long double acoshl(long double x);
extern long double asinhl(long double x);
extern long double atanhl(long double x);
extern long double expl(long double x);
extern long double frexpl(long double x, int *exponent);
extern long double ldexpl(long double x, int exponent);
extern long double logl(long double x);
extern long double log10l(long double x);
extern long double modfl(long double x, long double *iptr);
extern long double expm1l(long double x);
extern long double log1pl(long double x);
extern long double logbl(long double x);
extern long double exp2l(long double x);
extern long double log2l(long double x);
extern long double powl(long double x, long double y);
extern long double sqrtl(long double x);
extern long double hypotl(long double x, long double y);
extern long double cbrtl(long double x);
extern long double ceill(long double x);
extern long double fabsl(long double x);
extern long double floorl(long double x);
extern long double fmodl(long double x, long double y);
extern int isinfl(long double value);
extern int finitel(long double value);
extern long double dreml(long double x, long double y);
extern long double significandl(long double x);
extern long double copysignl(long double x, long double y);
extern long double nanl(const char *tagb);
extern int isnanl(long double value);
extern long double j0l(long double);
extern long double j1l(long double);
extern long double jnl(int, long double);
extern long double y0l(long double);
extern long double y1l(long double);
extern long double ynl(int, long double);
extern long double erfl(long double);
extern long double erfcl(long double);
extern long double lgammal(long double);
extern long double tgammal(long double);
extern long double gammal(long double);
extern long double lgammal_r(long double, int *signgamp);
extern long double rintl(long double x);
extern long double nextafterl(long double x, long double y);
extern long double nexttowardl(long double x, long double y);
extern long double remainderl(long double x, long double y);
extern long double scalbnl(long double x, int n);
extern int ilogbl(long double x);
extern long double scalblnl(long double x, long int n);
extern long double nearbyintl(long double x);
extern long double roundl(long double x);
extern long double truncl(long double x);
extern long double remquol(long double x, long double y, int *quo);
extern long int lrintl(long double x);
extern long long int llrintl(long double x);
extern long int lroundl(long double x);
extern long long int llroundl(long double x);
extern long double fdiml(long double x, long double y);
extern long double fmaxl(long double x, long double y);
extern long double fminl(long double x, long double y);
extern long double fmal(long double x, long double y, long double z);
extern long double scalbl(long double x, long double n);
//XXX(object): extern int signgam;
// }}}

// stdint.h {{{
typedef signed char        int8_t;
typedef signed short int   int16_t;
typedef signed int         int32_t;
typedef signed long int    int64_t;
typedef unsigned char      uint8_t;
typedef unsigned short int uint16_t;
typedef unsigned int       uint32_t;
typedef unsigned long int  uint64_t;
typedef long int           intptr_t;
typedef unsigned long int  uintptr_t;
typedef long int           intmax_t;
typedef unsigned long int  uintmax_t;
// }}}

// stdio.h {{{
typedef void FILE;

typedef long int off_t;
typedef long int ssize_t;
typedef void fpos_t;

extern FILE *stdin;
extern FILE *stdout;
extern FILE *stderr;

extern int remove(const char *filename);
extern int rename(const char *old, const char *new);
extern int renameat(int oldfd, const char *old, int newfd, const char *new);
extern int fclose(FILE *stream);
extern FILE *tmpfile(void);
extern char *tmpnam(char[20]);
extern char *tmpnam_r(char s[20]);
extern char *tempnam(const char *dir, const char *pfx);
extern int fflush(FILE *stream);
extern int fflush_unlocked(FILE *stream);
extern FILE *fopen(const char *restrict filename, const char *restrict modes);
extern FILE *freopen(const char *restrict filename, const char *restrict modes, FILE *restrict stream);
extern FILE *fdopen(int fd, const char *modes);
extern FILE *fmemopen(void *s, size_t len, const char *modes);
extern FILE *open_memstream(char **bufloc, size_t *sizeloc);
extern void setbuf(FILE *restrict stream, char *restrict buf);
extern int setvbuf(FILE *restrict stream, char *restrict buf, int modes, size_t n);
extern void setbuffer(FILE *restrict stream, char *restrict buf, size_t size);
extern void setlinebuf(FILE *stream);
//extern int fprintf(FILE *restrict stream, const char *restrict format, ...);
//extern int printf(const char *restrict format, ...);
//extern int sprintf(char *restrict s, const char *restrict format, ...);
//extern int snprintf(char *restrict s, size_t maxlen, const char *restrict format, ...);
//extern int dprintf(int fd, const char *restrict fmt, ...);
//extern int fscanf(FILE *restrict stream, const char *restrict format, ...);
//extern int scanf(const char *restrict format, ...);
//extern int sscanf(const char *restrict s, const char *restrict format, ...);
//extern int fscanf(FILE *restrict stream, const char *restrict format, ...);
//extern int scanf(const char *restrict format, ...);
//extern int sscanf(const char *restrict s, const char *restrict format, ...);
extern int fgetc(FILE *stream);
extern int getc(FILE *stream);
extern int getchar(void);
extern int getc_unlocked(FILE *stream);
extern int getchar_unlocked(void);
extern int fgetc_unlocked(FILE *stream);
extern int fputc(int c, FILE *stream);
extern int putc(int c, FILE *stream);
extern int putchar(int c);
extern int fputc_unlocked(int c, FILE *stream);
extern int putc_unlocked(int c, FILE *stream);
extern int putchar_unlocked(int c);
extern int getw(FILE *stream);
extern int putw(int w, FILE *stream);
extern char *fgets(char *restrict s, int n, FILE *restrict stream);
extern ssize_t getdelim(char **restrict lineptr, size_t *restrict n, int delimiter, FILE *restrict stream);
extern ssize_t getline(char **restrict lineptr, size_t *restrict n, FILE *restrict stream);
extern int fputs(const char *restrict s, FILE *restrict stream);
extern int puts(const char *s);
extern int ungetc(int c, FILE *stream);
extern size_t fread(void *restrict ptr, size_t size, size_t n, FILE *restrict stream);
extern size_t fwrite(const void *restrict ptr, size_t size, size_t n, FILE *restrict s);
extern size_t fread_unlocked(void *restrict ptr, size_t size, size_t n, FILE *restrict stream);
extern size_t fwrite_unlocked(const void *restrict ptr, size_t size, size_t n, FILE *restrict stream);
extern int fseek(FILE *stream, long int off, int whence);
extern long int ftell(FILE *stream);
extern void rewind(FILE *stream);
extern int fseeko(FILE *stream, off_t off, int whence);
extern off_t ftello(FILE *stream);
extern int fgetpos(FILE *restrict stream, fpos_t *restrict pos);
extern int fsetpos(FILE *stream, const fpos_t *pos);
extern void clearerr(FILE *stream);
extern int feof(FILE *stream);
extern int ferror(FILE *stream);
extern void clearerr_unlocked(FILE *stream);
extern int feof_unlocked(FILE *stream);
extern int ferror_unlocked(FILE *stream);
extern void perror(const char *s);
extern int fileno(FILE *stream);
extern int fileno_unlocked(FILE *stream);
extern int pclose(FILE *stream);
extern FILE *popen(const char *command, const char *modes);
extern char *ctermid(char *s);
extern void flockfile(FILE *stream);
extern int ftrylockfile(FILE *stream);
extern void funlockfile(FILE *stream);
// }}}

// time.h (needs before stdlib-) {{{
typedef long int clock_t;
typedef long int time_t;
typedef int clockid_t;
typedef void* timer_t;
typedef long int suseconds_t;

struct tm {
    int tm_sec;
    int tm_min;
    int tm_hour;
    int tm_mday;
    int tm_mon;
    int tm_year;
    int tm_wday;
    int tm_yday;
    int tm_isdst;
    long int tm_gmtoff;
    const char *tm_zone;
};

struct timeval { long int tv_sec; long int tv_usec; };
struct timespec { long int tv_sec; long int tv_nsec; };
struct itimerspec { struct timespec it_interval; struct timespec it_value; };

struct sigevent { int _; }; // yyy: :/
typedef int pid_t;

extern clock_t clock(void);
extern time_t time(time_t *timer);
extern double difftime(time_t time1, time_t time0);
extern time_t mktime(struct tm *tp);
extern size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict tp);
extern size_t strftime_l(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict tp, locale_t loc);
extern struct tm *gmtime(const time_t *timer);
extern struct tm *localtime(const time_t *timer);
extern struct tm *gmtime_r(const time_t *restrict timer, struct tm *restrict tp);
extern struct tm *localtime_r(const time_t *restrict timer, struct tm *restrict tp);
extern char *asctime(const struct tm *tp);
extern char *ctime(const time_t *timer);
extern char *asctime_r(const struct tm *restrict tp, char *restrict buf);
extern char *ctime_r(const time_t *restrict timer, char *restrict buf);
//XXX(object): extern char *tzname[2];
extern void tzset(void);
//XXX(object): extern int daylight;
//XXX(object): extern long int timezone;
extern time_t timegm(struct tm *tp);
extern time_t timelocal(struct tm *tp);
extern int dysize(int year);
extern int nanosleep(const struct timespec *requested_time, struct timespec *remaining);
extern int clock_getres(clockid_t clock_id, struct timespec *res);
extern int clock_gettime(clockid_t clock_id, struct timespec *tp);
extern int clock_settime(clockid_t clock_id, const struct timespec *tp);
extern int clock_nanosleep(clockid_t clock_id, int flags, const struct timespec *req, struct timespec *rem);
extern int clock_getcpuclockid(pid_t pid, clockid_t *clock_id);
extern int timer_create(clockid_t clock_id, struct sigevent *restrict evp, timer_t *restrict timerid);
extern int timer_delete(timer_t timerid);
extern int timer_settime(timer_t timerid, int flags, const struct itimerspec *restrict value, struct itimerspec *restrict ovalue);
extern int timer_gettime(timer_t timerid, struct itimerspec *value);
extern int timer_getoverrun(timer_t timerid);
extern int timespec_get(struct timespec *ts, int base);
// }}}

// stdlib.h {{{
typedef struct { int quot; int rem; } div_t;
typedef struct { long int quot; long int rem; } ldiv_t;
typedef struct { long long int quot; long long int rem; } lldiv_t;

extern double atof(const char *nptr);
extern int atoi(const char *nptr);
extern long int atol(const char *nptr);
extern long long int atoll(const char *nptr);
extern double strtod(const char *restrict nptr, char **restrict endptr);
extern float strtof(const char *restrict nptr, char **restrict endptr);
extern long double strtold(const char *restrict nptr, char **restrict endptr);
extern long int strtol(const char *restrict nptr, char **restrict endptr, int base);
extern unsigned long int strtoul(const char *restrict nptr, char **restrict endptr, int base);
extern long long int strtoll(const char *restrict nptr, char **restrict endptr, int base);
extern unsigned long long int strtoull(const char *restrict nptr, char **restrict endptr, int base);
extern char *l64a(long int n);
extern long int a64l(const char *s);

// xxx: here?
typedef void fd_set;
typedef long int fd_mask;
typedef void sigset_t;
extern int select(int nfds, fd_set *restrict readfds, fd_set *restrict writefds, fd_set *restrict exceptfds, struct timeval *restrict timeout);
extern int pselect(int nfds, fd_set *restrict readfds, fd_set *restrict writefds, fd_set *restrict exceptfds, const struct timespec *restrict timeout, const sigset_t *restrict sigmask);
/* xxx: here?
typedef unsigned long int pthread_t;
typedef void pthread_mutexattr_t;
typedef void pthread_condattr_t;
typedef unsigned int pthread_key_t;
typedef int pthread_once_t;
typedef union pthread_attr_t {} pthread_attr_t;
typedef void pthread_mutex_t;
typedef void pthread_cond_t;
typedef void pthread_rwlock_t;
typedef void pthread_rwlockattr_t;
typedef volatile int pthread_spinlock_t;
typedef void pthread_barrier_t;
typedef void pthread_barrierattr_t;
*/

extern long int random(void);
extern void srandom(unsigned int seed);
extern char *initstate(unsigned int seed, char *statebuf, size_t statelen);
extern char *setstate(char *statebuf);
extern int rand(void);
extern void srand(unsigned int seed);
extern double drand48(void);
extern double erand48(unsigned short int xsubi[3]);
extern long int lrand48(void);
extern long int nrand48(unsigned short int xsubi[3]);
extern long int mrand48(void);
extern long int jrand48(unsigned short int xsubi[3]);
extern void srand48(long int seedval);
extern unsigned short int *seed48(unsigned short int seed16v[3]);
extern void lcong48(unsigned short int param[7]);
extern void *malloc(size_t size);
extern void *calloc(size_t nmemb, size_t size);
extern void *realloc(void *ptr, size_t size);
extern void free(void *ptr);
extern void *reallocarray(void *ptr, size_t nmemb, size_t size);
extern void *reallocarray(void *ptr, size_t nmemb, size_t size);
extern void *alloca(size_t size);
extern void *valloc(size_t size);
extern int posix_memalign(void **memptr, size_t alignment, size_t size);
extern void *aligned_alloc(size_t alignment, size_t size);
extern void abort(void);
extern int atexit(void (*func)(void));
extern int at_quick_exit(void (*func)(void));
extern int on_exit(void (*func)(int status, void *arg), void *arg);
extern void exit(int status);
extern void quick_exit(int status);
extern void _Exit(int status);
extern char *getenv(const char *name);
extern int putenv(char *string);
extern int setenv(const char *name, const char *value, int replace);
extern int unsetenv(const char *name);
extern int clearenv(void);
extern char *mktemp(char *template);
extern int mkstemp(char *template);
extern int mkstemps(char *template, int suffixlen);
extern char *mkdtemp(char *template);
extern int system(const char *command);
extern char *realpath(const char *restrict name, char *restrict resolved);
extern void *bsearch(const void *key, const void *base, size_t nmemb, size_t size, int (*compar)(const void *, const void *));
extern void qsort(void *base, size_t nmemb, size_t size, int (*compar)(const void *, const void *));
extern int abs(int x);
extern long int labs(long int x);
extern long long int llabs(long long int x);
extern div_t div(int numer, int denom);
extern ldiv_t ldiv(long int numer, long int denom);
extern lldiv_t lldiv(long long int numer, long long int denom);
extern char *ecvt(double value, int ndigit, int *restrict decpt, int *restrict sign);
extern char *fcvt(double value, int ndigit, int *restrict decpt, int *restrict sign);
extern char *gcvt(double value, int ndigit, char *buf);
extern char *qecvt(long double value, int ndigit, int *restrict decpt, int *restrict sign);
extern char *qfcvt(long double value, int ndigit, int *restrict decpt, int *restrict sign);
extern char *qgcvt(long double value, int ndigit, char *buf);
extern int mblen(const char *s, size_t n);
extern int rpmatch(const char *response);
extern int getsubopt(char **restrict optionp, char *const *restrict tokens, char **restrict valuep);
extern int getloadavg(double loadavg[], int nelem);
// }}}

// string.h {{{
extern void *memcpy(void *restrict dest, const void *restrict src, size_t n);
extern void *memmove(void *dest, const void *src, size_t n);
extern void *memccpy(void *restrict dest, const void *restrict src, int c, size_t n);
extern void *memset(void *s, int c, size_t n);
extern int memcmp(const void *s1, const void *s2, size_t n);
extern void *memchr(const void *s, int c, size_t n);
extern char *strcpy(char *restrict dest, const char *restrict src);
extern char *strncpy(char *restrict dest, const char *restrict src, size_t n);
extern char *strcat(char *restrict dest, const char *restrict src);
extern char *strncat(char *restrict dest, const char *restrict src, size_t n);
extern int strcmp(const char *s1, const char *s2);
extern int strncmp(const char *s1, const char *s2, size_t n);
extern int strcoll(const char *s1, const char *s2);
extern size_t strxfrm(char *restrict dest, const char *restrict src, size_t n);
extern int strcoll_l(const char *s1, const char *s2, locale_t l);
extern size_t strxfrm_l(char *dest, const char *src, size_t n, locale_t l);
extern char *strdup(const char *s);
extern char *strndup(const char *string, size_t n);
extern char *strchr(const char *s, int c);
extern char *strrchr(const char *s, int c);
extern size_t strcspn(const char *s, const char *reject);
extern size_t strspn(const char *s, const char *accept);
extern char *strpbrk(const char *s, const char *accept);
extern char *strstr(const char *haystack, const char *needle);
extern char *strtok(char *restrict s, const char *restrict delim);
extern char *strtok_r(char *restrict s, const char *restrict delim, char **restrict save_ptr);
extern size_t strlen(const char *s);
extern size_t strnlen(const char *string, size_t maxlen);
extern char *strerror(int errnum);
extern int strerror_r(int errnum, char *buf, size_t buflen);
extern char *strerror_l(int errnum, locale_t l);
extern int bcmp(const void *s1, const void *s2, size_t n);
extern void bcopy(const void *src, void *dest, size_t n);
extern void bzero(void *s, size_t n);
extern char *index(const char *s, int c);
extern char *rindex(const char *s, int c);
extern int ffs(int i);
extern int ffsl(long int l);
extern int ffsll(long long int ll);
extern int strcasecmp(const char *s1, const char *s2);
extern int strncasecmp(const char *s1, const char *s2, size_t n);
extern int strcasecmp_l(const char *s1, const char *s2, locale_t loc);
extern int strncasecmp_l(const char *s1, const char *s2, size_t n, locale_t loc);
extern void explicit_bzero(void *s, size_t n);
extern char *strsep(char **restrict stringp, const char *restrict delim);
extern char *strsignal(int sig);
extern char *stpcpy(char *restrict dest, const char *restrict src);
extern char *stpncpy(char *restrict dest, const char *restrict src, size_t n);
// }}}
