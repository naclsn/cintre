a: int con -- tok: ;
ld: double com lon -- tok: ;
ar: [32]int -- tok: ,
sfdsbbfsbdfb: int -- tok: ;
ppp: *(*(char)) -- tok: ;
y: char -- tok: ;
yy: *(char) con -- tok: ;
yyy: *(() -> char) -- tok: ;
yyyy: *([2]char) -- tok: ;
v: int sig -- tok: ;
typ b: float -- tok: ;
c: int lon lon -- tok: ,
d: *(int lon lon) con -- tok: ,
e: int lon lon -- tok: ;
f: (...) -> void -- tok: ;
g: () -> void -- tok: ;
sta aa: (...) -> *(int) -- tok: ,
sta bb: int -- tok: ;
laksdjf: (c: char, i: int, f: float, d: double) -> int uns -- tok: ;
x: str S -- tok: ;
z: int sig -- tok: ;
fst: enu E1 {
        ONE
        TWO= 3
    } -- tok: ,
lsdkfjsldf: enu E1 {
        ONE
        TWO= 3
    } -- tok: ;
sec: enu {
        ONN
        TWW
    } -- tok: ;
trd: enu E3 {
    } -- tok: ;
sta crap: (int, int lon, int sho) -> int -- tok: ;
ddd: *(*((...) -> void)) -- tok: ;
b: some_t -- tok: ;
v: enu E {
        A
        B
        C
    } -- tok: ;
w: str S {
        a: int
        b: int
        c: int
    } -- tok: ;
b: int -- tok: ;
fff: str {
    } -- tok: ;
outer: str {
        middle: str {
                inner: int
            }
    } -- tok: ;
a: int -- tok: ;
sta b: (...) -> *(int con vol inl uns lon lon) con res vol -- tok: ;
c: int -- tok: ,
d: () -> int -- tok: ,
e: [3][2][1]int -- tok: ;
f: int -- tok: ;
g: (...) -> void -- tok: {
h: (int) -> *(() -> int) -- tok: ;
typ B: uni {
    } -- tok: ,
typ pB: *(uni {
    }) -- tok: ;
begin: int -- tok: ;
sta aa: str {
        a: int
        b: int
        c: *(char con)
    } -- tok: ;
a: uni aaaaa -- tok: ;
str S {
    } -- tok: ;
enu E {
        A
        B
        C
    } -- tok: ;
end: int -- tok: ;
